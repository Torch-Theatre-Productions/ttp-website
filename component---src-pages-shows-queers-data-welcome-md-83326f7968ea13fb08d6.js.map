{"version":3,"file":"component---src-pages-shows-queers-data-welcome-md-83326f7968ea13fb08d6.js","mappings":"yLAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,GAAI,KACJC,EAAG,IACHC,GAAI,KACJC,OAAQ,WACPC,EAAAA,EAAAA,MAAsBR,EAAMS,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBT,EAAYG,GAAI,KAAM,WAAY,KAAMM,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,wEAAyEK,EAAAA,cAAoBT,EAAYK,GAAI,KAAM,UAAW,0BAA2BI,EAAAA,cAAoBT,EAAYM,OAAQ,KAAM,oCAAqC,KAAM,KAAMG,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,ufAA0f,KAAMK,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,4FAA+F,KAAMK,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,6MAA8M,KAAMK,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,mCAAoCK,EAAAA,cAAoBT,EAAYM,OAAQ,KAAM,QAAS,4LAA6LG,EAAAA,cAAoBT,EAAYK,GAAI,KAAM,UAAW,+BAAgC,KAAMI,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,gBAAiBK,EAAAA,cAAoBT,EAAYM,OAAQ,KAAM,0BAA2B,+LAAgM,KAAMG,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,6CAA8CK,EAAAA,cAAoBT,EAAYM,OAAQ,KAAM,kBAAmB,kPAAmP,KAAMG,EAAAA,cAAoBT,EAAYI,EAAG,KAAM,mBAAoBK,EAAAA,cAAoBT,EAAYM,OAAQ,KAAM,QAAS,8MAA+M,KAAMG,EAAAA,cAAoBT,EAAYI,EAAG,KAAMK,EAAAA,cAAoBT,EAAYM,OAAQ,KAAM,oBAC11F,CAKA,UAJA,SAAoBP,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOW,QAASC,GAAaV,OAAOC,OAAO,CAAC,GAAGK,EAAAA,EAAAA,MAAsBR,EAAMS,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWZ,EAAOU,EAAAA,cAAoBX,EAAmBC,IAAUD,EAAkBC,EAC9H,C,sECkBO,MAAMa,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBL,GAC/B,MAAMM,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfJ,EACFA,EAAWM,GAGb,IAAIA,KAAsBN,IAChC,CAACM,EAAmBN,GACzB,C","sources":["webpack://torch-theatre-productions-website/./src/pages/shows/queers/data/welcome.md","webpack://torch-theatre-productions-website/./.yarn/__virtual__/@mdx-js-react-virtual-349c9d4f43/0/cache/@mdx-js-react-npm-2.3.0-d5582a450b-f45fe77955.zip/node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    em: \"em\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Welcome\"), \"\\n\", React.createElement(_components.p, null, \"Hello and welcome to the Burton Taylor Studio and this production of \", React.createElement(_components.em, null, \"Queers\"), \",\\r\\nbrought to you by \", React.createElement(_components.strong, null, \"Torch Theatre Productions Oxford\"), \"!\"), \"\\n\", React.createElement(_components.p, null, \"If we were to travel back in time to about a year ago, you would find Tora and\\r\\nmyself in a sunny garden, each with a glass of white wine. We would casually be\\r\\ntalking about our Oxford theatre experiences and our mutual love for a couple of\\r\\nmusicals that don't receive wider recognition. \\\"But nobody would put these shows\\r\\non\\\", you would hear us say, \\\"there's not enough demand for shows like these, and\\r\\nthe bigger, more established groups need to meet the needs of their membership.\\\"\"), \"\\n\", React.createElement(_components.p, null, \"\\\"We should start a theatre company and just do it ourselves!\\\" you would hear us\\r\\njoke.\"), \"\\n\", React.createElement(_components.p, null, \"But now, here we are in the Burton Taylor Studio. I will be honest with you, it\\r\\ndoesn't seem quite real, and it's very important to acknowledge that it would not\\r\\nbe real without a few key people.\"), \"\\n\", React.createElement(_components.p, null, \"Firstly, a massive thank you to \", React.createElement(_components.strong, null, \"Tora\"), \". If you don't know her, Tora is an\\r\\nabsolute powerhouse who is on top of quite literally everything at all times. I\\r\\nhave no idea how she does it, but be assured there would be no \", React.createElement(_components.em, null, \"Queers\"), \", no\\r\\nTorch, without her.\"), \"\\n\", React.createElement(_components.p, null, \"Secondly, to \", React.createElement(_components.strong, null, \"our cast and directors\"), \" (not you, Glen), who have been so\\r\\nenthusiastic and supportive of the project. From casting through to the\\r\\nproduction of the final pieces, it's been a pleasure to work with you all.\"), \"\\n\", React.createElement(_components.p, null, \"Thirdly, to our amazing production duo of \", React.createElement(_components.strong, null, \"Gavin and Will\"), \", who have a wealth\\r\\nof experience in their respective areas. Since this is Torch's first full-budget\\r\\nproduction, it can be difficult to be sure whether you're on track to succeed,\\r\\nbut knowing these two have your back helps a lot.\"), \"\\n\", React.createElement(_components.p, null, \"And finally, to \", React.createElement(_components.strong, null, \"you!\"), \" Thank you so much for grabbing a ticket and coming to\\r\\nsupport us. This project means a lot to us all, and I hope that some of the\\r\\npieces you're about to see move you in the ways they've moved us.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Chris Johnstone\")));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","em","strong","_provideComponents","components","React","wrapper","MDXLayout","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}