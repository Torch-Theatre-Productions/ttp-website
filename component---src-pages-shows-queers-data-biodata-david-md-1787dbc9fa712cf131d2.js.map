{"version":3,"file":"component---src-pages-shows-queers-data-biodata-david-md-1787dbc9fa712cf131d2.js","mappings":"2LAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,OACHC,EAAAA,EAAAA,KAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,0IAA2II,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,eAAgB,yBAA0BG,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,kBAAmB,mBAAoBG,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,gBAAiB,kBAAmBG,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,6BAA8B,qBAAsBG,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,mBAAoB,sDAAuDG,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,wBAAyB,wBAAyBG,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,2BAA4B,2CAA4CG,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,QAAS,kBAAmBG,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,6BAA8B,qDAAsDG,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,aAAc,sVAC7kC,CAKA,UAJA,SAAoBL,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOS,QAASC,GAAaR,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,KAAsBN,EAAMO,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWV,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,C,qECcA,MAAMW,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBN,GAC/B,MAAMO,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfL,EACFA,EAAWO,GAGb,IAAIA,KAAsBP,EACnC,GACA,CAACO,EAAmBP,GAExB,C","sources":["webpack://torch-theatre-productions-website/./src/pages/shows/queers/data/biodata/david.md","webpack://torch-theatre-productions-website/./.yarn/__virtual__/@mdx-js-react-virtual-dd7e456519/0/cache/@mdx-js-react-npm-3.0.1-1ce14f6273-d566407af1.zip/node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return React.createElement(_components.p, null, \"David has been acting with various Oxford-based theatre groups since his student\\r\\ndays. Favourite roles have included the Shamrayev (\", React.createElement(_components.em, null, \"The Seagull\"), \"), Duke\\r\\nFrederick (\", React.createElement(_components.em, null, \"As You Like It\"), \"), Revd Parris (\", React.createElement(_components.em, null, \"The Crucible\"), \"), Mr Alfieri (\", React.createElement(_components.em, null, \"A View\\r\\nfrom the Bridge\"), \") and Dr Livesey (\", React.createElement(_components.em, null, \"Treasure Island\"), \"), all with Oxford Theatre\\r\\nGuild; Dwornitschek (\", React.createElement(_components.em, null, \"The Play’s the Thing\"), \") and M de Tréville (\", React.createElement(_components.em, null, \"The Three\\r\\nMusketeers\"), \") with ElevenOne Theatre; Mr Woodhouse (\", React.createElement(_components.em, null, \"Emma\"), \") and Leonato (\", React.createElement(_components.em, null, \"Much\\r\\nAdo About Nothing\"), \"), both with Thistledown Theatre; and Gloucester (\", React.createElement(_components.em, null, \"King Lear\"), \")\\r\\nwith Siege Theatre. David has also played the piano at cabaret and revue\\r\\nevenings, and for local theatre companies including Oxford Dance Theatre, Oxford\\r\\nComedy Deathmatch, and the Oxford Stage Company (accompanying a very young\\r\\nMartin Freeman). He also played for Torch Theatre Productions’ inaugural concert\\r\\nin December.\");\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","em","_provideComponents","components","React","wrapper","MDXLayout","emptyComponents","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}