{"version":3,"file":"component---src-pages-shows-ordinary-days-data-bios-nicky-md-42449efc984bfc487afb.js","mappings":"2LAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,OAAQ,SACRC,GAAI,OACHC,EAAAA,EAAAA,KAAsBP,EAAMQ,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,0KAA2KK,EAAAA,cAAoBR,EAAYI,OAAQ,KAAM,SAAU,OAAQI,EAAAA,cAAoBR,EAAYK,GAAI,KAAM,oBAAqB,uBAAwBG,EAAAA,cAAoBR,EAAYI,OAAQ,KAAM,SAAU,OAAQI,EAAAA,cAAoBR,EAAYK,GAAI,KAAM,kBAAmB,qCAAsCG,EAAAA,cAAoBR,EAAYI,OAAQ,KAAM,SAAU,OAAQI,EAAAA,cAAoBR,EAAYK,GAAI,KAAM,cAAe,2QAA4Q,KAAMG,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,+EAAgFK,EAAAA,cAAoBR,EAAYK,GAAI,KAAM,iBAAkB,sCACjoC,CAKA,UAJA,SAAoBN,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOU,QAASC,GAAaT,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,KAAsBP,EAAMQ,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWX,EAAOS,EAAAA,cAAoBV,EAAmBC,IAAUD,EAAkBC,EAC9H,C,qECaA,MAAMY,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBN,GAC/B,MAAMO,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfL,EACFA,EAAWO,GAGb,IAAIA,KAAsBP,EACnC,GACA,CAACO,EAAmBP,GAExB,C","sources":["webpack://torch-theatre-productions-website/./src/pages/shows/ordinary-days/data/bios/nicky.md","webpack://torch-theatre-productions-website/./.yarn/__virtual__/@mdx-js-react-virtual-dd7e456519/0/cache/@mdx-js-react-npm-3.0.1-1ce14f6273-d566407af1.zip/node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    strong: \"strong\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Having studied at Birmingham Theatre School where she gained a Diploma in\\r\\nActing, Nicky has been lucky enough to play some wonderful roles since then,\\r\\nincluding \", React.createElement(_components.strong, null, \"Beryl\"), \" in \", React.createElement(_components.em, null, \"Made in Dagenham\"), \" (MAC Productions); \", React.createElement(_components.strong, null, \"Marie\"), \" in \", React.createElement(_components.em, null, \"Calendar Girls\"), \"\\r\\n(Oxford Operatic Society) and \", React.createElement(_components.strong, null, \"Woman\"), \" in \", React.createElement(_components.em, null, \"The Father\"), \" (BMH Productions). Nicky is\\r\\none of the co-founders of MAC Productions and is immensely proud of what the\\r\\ncompany has achieved, celebrating 10 years of MAC in 2023. She also loves\\r\\ndirecting and has directed shows for both Oxford Operatic Society and MAC.\"), \"\\n\", React.createElement(_components.p, null, \"Nicky would like to thank Torch for the opportunity of being involved in\\r\\n\", React.createElement(_components.em, null, \"Ordinary Days\"), \", itâ€™s been an absolute privilege.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","strong","em","_provideComponents","components","React","wrapper","MDXLayout","emptyComponents","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}