{"version":3,"file":"component---src-pages-shows-queers-mdx-524bf9408566b2d6e9b2.js","mappings":"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","sources":["webpack://torch-theatre-productions-website/./src/pages/shows/queers.mdx","webpack://torch-theatre-productions-website/./.yarn/__virtual__/@mdx-js-react-virtual-349c9d4f43/0/cache/@mdx-js-react-npm-2.3.0-d5582a450b-f45fe77955.zip/node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    strong: \"strong\",\n    a: \"a\",\n    ul: \"ul\",\n    li: \"li\",\n    h2: \"h2\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.h1, null, \"Welcome\"), \"\\n\", React.createElement(_components.p, null, \"We are delighted to welcome you to the Burton Taylor Studio and this performance of Queers.\"), \"\\n\", React.createElement(_components.h1, null, \"About \", React.createElement(_components.strong, null, \"\\\"Queers\\\"\")), \"\\n\", React.createElement(_components.p, null, \"Queers was first broadcast on BBC4 in July 2017. Curated by Mark Gatiss, the\\r\\nmonologues were commissioned to mark the 50th anniversary of the 1967 Sexual\\r\\nOffences Act. They celebrate a century of evolving social attitudes and\\r\\npolitical milestones in British gay history as seen through the eyes of\\r\\ndifferent individuals.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.a, {\n    href: \"https://nickhernbooksblog.com/2017/07/27/lets-not-forget-how-far-we-have-come-mark-gatiss-on-remembering-gay-history-in-queers/\"\n  }, \"‘Let’s not forget how far we have come’: Mark Gatiss on remembering gay history\\r\\nin Queers\")), \"\\n\", React.createElement(_components.p, null, \"In 2018 the Oxford Theatre Guild performed three of the monologues at local\\r\\ndrama festivals. Directed by Simon Tavener, the cast included Victoria. We are\\r\\nexcited to be restaging Missing Alice along with five of the other monologues to\\r\\ncelebrate 20 years of Oxford Pride and the 10th anniversary of the 2013 Marriage\\r\\n(Same Sex Couples Act).\"), \"\\n\", React.createElement(_components.h1, null, \"About Torch Theatre Productions Oxford\"), \"\\n\", React.createElement(_components.p, null, \"We formed Torch Theatre Productions Oxford in 2022 and staged a fundraising\\r\\nconcert at Somerville College in December 2022. We became a registered Community\\r\\nInterest Company in February 2023. Our aim is to provide opportunities for\\r\\npeople in the local community to engage with theatre as audience members and\\r\\nperformers, and in creative and technical roles.\"), \"\\n\", React.createElement(_components.h1, null, \"Acknowledgements\"), \"\\n\", React.createElement(_components.p, null, \"Huge thanks to our wonderful cast, directors and production team. We would also like to thank the following people and organisations:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"Robert Bristow at the Burton Taylor Studio\"), \"\\n\", React.createElement(_components.li, null, \"Tom Legg at the Oxford Playhouse\"), \"\\n\", React.createElement(_components.li, null, \"Nick Hern Books\"), \"\\n\", React.createElement(_components.li, null, \"Oxfordshire Drama Wardrobe\"), \"\\n\", React.createElement(_components.li, null, \"Dovey Cake Design\"), \"\\n\", React.createElement(_components.li, null, \"Somerville College\"), \"\\n\", React.createElement(_components.li, null, \"Triona Adams\"), \"\\n\", React.createElement(_components.li, null, \"Guy Grimsley\"), \"\\n\", React.createElement(_components.li, null, \"Emily Jameson\"), \"\\n\", React.createElement(_components.li, null, \"Georgette Jameson\"), \"\\n\"), \"\\n\", React.createElement(_components.h1, null, \"Oxford Pride\"), \"\\n\", React.createElement(_components.p, null, \"At the end of each performance, we will be collecting for Oxford Pride. Run by\\r\\nvolunteers, Oxford Pride is a registered charity that celebrates lesbian, gay,\\r\\nbisexual, transgender and queer life in Oxfordshire.\"), \"\\n\", React.createElement(_components.p, null, \"Thank you for all your support!\"), \"\\n\", React.createElement(_components.p, null, \"Victoria Wilson and Chris Johnstone\"), \"\\n\", React.createElement(_components.p, null, \"Torch Theatre Productions Oxford\"), \"\\n\", React.createElement(_components.h1, null, \"Biographies\"), \"\\n\", React.createElement(_components.h2, null, \"David Guthrie\"), \"\\n\", React.createElement(_components.p, null, \"Steve in \", React.createElement(_components.em, null, \"Something Borrowed\")), \"\\n\", React.createElement(_components.p, null, \"David has been acting with various Oxford-based theatre groups since his student\\r\\ndays. Favourite roles have included the Shamrayev (\", React.createElement(_components.em, null, \"The Seagull\"), \"), Duke Frederick\\r\\n(\", React.createElement(_components.em, null, \"As You Like It\"), \"), Revd Parris (\", React.createElement(_components.em, null, \"The Crucible\"), \"), Mr Alfieri (\", React.createElement(_components.em, null, \"A View from the\\r\\nBridge\"), \") and Dr Livesey (\", React.createElement(_components.em, null, \"Treasure Island\"), \"), all with Oxford Theatre Guild;\\r\\nDwornitschek (\", React.createElement(_components.em, null, \"The Play’s the Thing\"), \") and M de Tréville (\", React.createElement(_components.em, null, \"The Three Musketeers\"), \")\\r\\nwith ElevenOne Theatre; Mr Woodhouse (\", React.createElement(_components.em, null, \"Emma\"), \") and Leonato (\", React.createElement(_components.em, null, \"Much Ado About\\r\\nNothing\"), \"), both with Thistledown Theatre; and Gloucester (\", React.createElement(_components.em, null, \"King Lear\"), \") with Siege\\r\\nTheatre. David has also played the piano at cabaret and revue evenings, and for\\r\\nlocal theatre companies including Oxford Dance Theatre, Oxford Comedy\\r\\nDeathmatch, and the Oxford Stage Company (accompanying a very young Martin\\r\\nFreeman). He also played for Torch Theatre Productions’ inaugural concert in\\r\\nDecember.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","h1","p","strong","a","ul","li","h2","em","_provideComponents","components","React","href","wrapper","MDXLayout","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}