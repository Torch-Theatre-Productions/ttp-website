{"version":3,"file":"component---src-pages-shows-queers-data-biodata-chris-md-a224dfa063fa44fe7691.js","mappings":"yLAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,KACJC,OAAQ,WACPC,EAAAA,EAAAA,KAAsBP,EAAMQ,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,yHAA2HK,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,sBAAuB,kKAAoKI,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,YAAa,mDAAoDI,EAAAA,cAAoBR,EAAYK,OAAQ,KAAM,0BAA2B,iBAAkBG,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,WAAY,iCAAkCI,EAAAA,cAAoBR,EAAYK,OAAQ,KAAM,mBAAoB,4BAA6BG,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,mBAAoB,KAAMI,EAAAA,cAAoBR,EAAYK,OAAQ,KAAM,4BAA6B,MAAO,KAAMG,EAAAA,cAAoBR,EAAYG,EAAG,KAAM,qEAAsEK,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,cAAe,kDAAmDI,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,UAAW,sEAAuEI,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,YAAa,KAAMI,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,UAAW,QAASI,EAAAA,cAAoBR,EAAYI,GAAI,KAAM,UAAW,0NAC59C,CAKA,UAJA,SAAoBL,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOU,QAASC,GAAaT,OAAOC,OAAO,CAAC,GAAGI,EAAAA,EAAAA,KAAsBP,EAAMQ,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWX,EAAOS,EAAAA,cAAoBV,EAAmBC,IAAUD,EAAkBC,EAC9H,C,qECaA,MAAMY,EAAkB,CAAC,EAEnBC,EAAa,gBAAoBD,GAUhC,SAASE,EAAiBN,GAC/B,MAAMO,EAAoB,aAAiBF,GAG3C,OAAO,WACL,WAEE,MAA0B,mBAAfL,EACFA,EAAWO,GAGb,IAAIA,KAAsBP,EACnC,GACA,CAACO,EAAmBP,GAExB,C","sources":["webpack://torch-theatre-productions-website/./src/pages/shows/queers/data/biodata/chris.md","webpack://torch-theatre-productions-website/./.yarn/__virtual__/@mdx-js-react-virtual-dd7e456519/0/cache/@mdx-js-react-npm-3.0.1-1ce14f6273-d566407af1.zip/node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\",\n    strong: \"strong\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Chris has been seen regularly on stage performing various roles in musical\\r\\ntheatre for over 15 years, despite his \\\"\", React.createElement(_components.em, null, \"young and innocent\"), \"\\\" face. Recent roles\\r\\ninclude Jenkin Lewis, Arthur the Bugler, Courtier Two, Street Crier and Princess\\r\\nAnne (not a typo) in the multi-role chaos that was \", React.createElement(_components.em, null, \"Mrs Pack\"), \", performed at the\\r\\nEdinburgh Fringe in 2022 (\", React.createElement(_components.strong, null, \"Three Chairs and a Hat\"), \"), Paul in\\r\\n\", React.createElement(_components.em, null, \"Company\"), \" at the OFS in February 2022 (\", React.createElement(_components.strong, null, \"MAC Productions\"), \") and Arthur\\r\\nKipps in \", React.createElement(_components.em, null, \"Half a Sixpence\"), \" (\", React.createElement(_components.strong, null, \"Solihull Theatre Company\"), \").\"), \"\\n\", React.createElement(_components.p, null, \"Chris would like to personally thank Glen for working with him on \", React.createElement(_components.em, null, \"More Anger\"), \"\\r\\nas well as tapping him on the shoulder for \", React.createElement(_components.em, null, \"Dexter\"), \" over two years ago, which\\r\\nultimately led to his involvement in \", React.createElement(_components.em, null, \"Mrs Pack\"), \", \", React.createElement(_components.em, null, \"Dexter\"), \" and \", React.createElement(_components.em, null, \"Verity\"), \". Chris\\r\\nwould like to dedicate this performance to his parents, who have always been a\\r\\nfountain of support, as well as all the ex-boyfriends that have given him the\\r\\nangst to work with for this performance.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('mdx/types.js').MDXComponents} MDXComponents\n * @typedef {import('react').Component<{}, {}, unknown>} Component\n * @typedef {import('react').ReactNode} ReactNode\n */\n\n/**\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Readonly<MDXComponents>} currentComponents\n *   Current components from the context.\n * @returns {MDXComponents}\n *   Additional components.\n *\n * @typedef Props\n *   Configuration for `MDXProvider`.\n * @property {ReactNode | null | undefined} [children]\n *   Children (optional).\n * @property {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context (default: `false`).\n */\n\nimport React from 'react'\n\n/** @type {Readonly<MDXComponents>} */\nconst emptyComponents = {}\n\nconst MDXContext = React.createContext(emptyComponents)\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Readonly<MDXComponents> | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that creates them (optional).\n * @returns {MDXComponents}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(\n    function () {\n      // Custom merge via a function prop\n      if (typeof components === 'function') {\n        return components(contextComponents)\n      }\n\n      return {...contextComponents, ...components}\n    },\n    [contextComponents, components]\n  )\n}\n\n/**\n * Provider for MDX context.\n *\n * @param {Readonly<Props>} properties\n *   Properties.\n * @returns {JSX.Element}\n *   Element.\n * @satisfies {Component}\n */\nexport function MDXProvider(properties) {\n  /** @type {Readonly<MDXComponents>} */\n  let allComponents\n\n  if (properties.disableParentContext) {\n    allComponents =\n      typeof properties.components === 'function'\n        ? properties.components(emptyComponents)\n        : properties.components || emptyComponents\n  } else {\n    allComponents = useMDXComponents(properties.components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    properties.children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","em","strong","_provideComponents","components","React","wrapper","MDXLayout","emptyComponents","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}