{"version":3,"file":"component---src-pages-shows-queers-data-biodata-glen-md-f8629cf96ee23b0bdffe.js","mappings":"0LAGA,SAASA,EAAkBC,GACzB,MAAMC,EAAcC,OAAOC,OAAO,CAChCC,EAAG,IACHC,GAAI,OACHC,EAAAA,EAAAA,MAAsBN,EAAMO,YAC/B,OAAOC,EAAAA,cAAoBA,EAAAA,SAAgB,KAAMA,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,6IAA8II,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,oBAAqB,YAAaG,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,uBAAwB,eAAgBG,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,kBAAmB,iCAAkCG,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,UAAW,iKAAkKG,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,UAAW,QAASG,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,UAAW,KAAM,KAAMG,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,4HAA6HI,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,SAAU,gEAAiEG,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,WAAY,iDAAkDG,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,kBAAmB,+DAAgEG,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,0BAA2B,mBAAoBG,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,4BAA6B,sBAAuBG,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,YAAa,uBAAwBG,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,iCAAkC,oBAAqBG,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,sBAAuB,8BAA+BG,EAAAA,cAAoBP,EAAYI,GAAI,KAAM,2BAA4B,YAAa,KAAMG,EAAAA,cAAoBP,EAAYG,EAAG,KAAM,2RACt4D,CAKA,UAJA,SAAoBJ,QAAK,IAALA,IAAAA,EAAQ,CAAC,GAC3B,MAAOS,QAASC,GAAaR,OAAOC,OAAO,CAAC,GAAGG,EAAAA,EAAAA,MAAsBN,EAAMO,YAC3E,OAAOG,EAAYF,EAAAA,cAAoBE,EAAWV,EAAOQ,EAAAA,cAAoBT,EAAmBC,IAAUD,EAAkBC,EAC9H,C,sECoBO,MAAMW,EAAa,gBAAoB,CAAC,GAiCxC,SAASC,EAAiBL,GAC/B,MAAMM,EAAoB,aAAiBF,GAG3C,OAAO,WAAc,IAEO,mBAAfJ,EACFA,EAAWM,GAGb,IAAIA,KAAsBN,IAChC,CAACM,EAAmBN,GACzB,C","sources":["webpack://torch-theatre-productions-website/./src/pages/shows/queers/data/biodata/glen.md","webpack://torch-theatre-productions-website/./.yarn/__virtual__/@mdx-js-react-virtual-349c9d4f43/0/cache/@mdx-js-react-npm-2.3.0-d5582a450b-f45fe77955.zip/node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Glen has performed and directed in the Oxford area for many years. Directing credits for Oxford Operatic Society at the Playhouse include \", React.createElement(_components.em, null, \"Sunset Boulevard\"), \" (2015), \", React.createElement(_components.em, null, \"Fiddler on the Roof\"), \" (2018) and \", React.createElement(_components.em, null, \"Calendar Girls\"), \" (2022). He has also directed \", React.createElement(_components.em, null, \"Verity\"), \" for Oxford author and composer, Nia Williams, for the Edinburgh Fringe 2019 and is currently directing for a musical duo-performance for this year's fringe: \", React.createElement(_components.em, null, \"Verity\"), \" and \", React.createElement(_components.em, null, \"Dexter\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Glen has a wide range of performing credits both in principle and supporting roles as well as ensemble. Most recently in \", React.createElement(_components.em, null, \"Evita\"), \" at the Oxford Playhouse and in 2022 with MAC Productions in \", React.createElement(_components.em, null, \"Company\"), \". He has played the lead role as the Baker in \", React.createElement(_components.em, null, \"Into The Woods\"), \" (2017). Other notable performing credits include, Pablo -- \", React.createElement(_components.em, null, \"Sister Act The Musical\"), \" (2019), Oberon \", React.createElement(_components.em, null, \"A Midsummer Nights Dream\"), \" (2016), Jigger -- \", React.createElement(_components.em, null, \"Carousel\"), \" (2014), Lumiere -- \", React.createElement(_components.em, null, \"Disney's Beauty and the Beast\"), \" (2012), Ralph - \", React.createElement(_components.em, null, \"The Sound of Music\"), \" (2003), and King Pelius - \", React.createElement(_components.em, null, \"Jason and the Argonauts\"), \" (2005).\"), \"\\n\", React.createElement(_components.p, null, \"Glen is excited to work with Torch Productions on their inaugural project and hopes you find as much to reflect on in the narratives as he has; both in celebration of how far LGBTQ acceptance has come in the last 100 years and aspiration for that to be even better in the future.\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","_components","Object","assign","p","em","_provideComponents","components","React","wrapper","MDXLayout","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}